####################################################
#                                                  #
#                   ORP Piscine                    #
#                   Automation                     #
####################################################

automation:
  #
  - alias: Piscine-3_3_1-ORP Validation Automatismes
    description: 'Valide les automations régulation pH au bout de 1 h de fonctionnement'
    trigger:
    - platform: state
      entity_id: binary_sensor.ppe_piscine_en_marche
      for:
        hours: 0
        minutes: 15
        seconds: 0
      to: 'on'
      from: 'off'
      id: ma_pump
    - platform: state
      entity_id: binary_sensor.ppe_piscine_en_marche
      id: at_pump
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 10
    - platform: state
      entity_id: input_boolean.regul_chlore
      id: regule_chlore_off
      from: 'on'
      to: 'off'
    condition: []
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: ma_pump
        - condition: state
          entity_id: input_boolean.regul_chlore
          state: 'on'
        sequence:
        - service: automation.turn_on
          target:
            entity_id:
            - automation.Piscine-3_3_2-Chlore-Injection
            - automation.Piscine-3_3_3-ORP Notifications
        - service: notify.telegram
          data:
            message: pH sonde= {{states('sensor.orp_piscine_orp')}} {{-"\n"-}}{{states("sensor.date_time")
              }}
            title: Piscine Activation Traitement pH !
      - conditions:
        - condition: trigger
          id: at_pump
        sequence:
        - service: automation.turn_off
          target:
            entity_id:
            - automation.Piscine-3_3_2-Chlore-Injection
            - automation.Piscine-3_3_3-ORP Notifications
      - conditions:
        - condition: trigger
          id: regule_chlore_off
        sequence:
        - service: automation.turn_off
          target:
            entity_id:
            - automation.Piscine-3_3_2-Chlore-Injection
            - automation.Piscine-3_3_3-ORP Notifications
      default: []
    mode: single

  - alias: "Piscine-3_3_2-Chlore-Injection"
    description: "ORP Injection de Chlore"
    trigger:
      - platform: time_pattern
        hours: /1
    condition:
      - condition: template
        value_template: '{% set m=states(''sensor.orp_piscine_orp'') | float %}
          {% set c=states(''input_number.orp_cible'') | float %}
          {{ m < c }}'
      - condition: numeric_state
        entity_id: sensor.orp_piscine_orp
        above: '0'
      - condition: state
        entity_id: input_boolean.regul_orp
        state: 'on'
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.chlore_duree_inject_s
        data_template:
          value: "{% set m=states('sensor.orp_piscine_orp') | float(default=0) %} {% set\
            \ x=states('input_number.simul_orp') | float(default=0) %} {% set c=states('input_number.orp_cible')\
            \ | float(default=0) %} {% set d=states('input_number.chlore_debit_ppe') |\
            \ float(default=0) %} {% set e=states('input_number.chlore_concentration')\
            \ | float(default=0) %} {% set r=(((c-m)/(e/100))/d)*3600|round(2)|int(default=0)\
            \ %}  {% if r < 0 %}\n  {{ 0 }}\n{% else %}\n  {{ (r%60)|int(default=0) }}\n\
            {% endif %}"
      - service: input_number.set_value
        target:
          entity_id: input_number.chlore_duree_inject_mn
        data_template:
          value: "{% set m=states('sensor.orp_piscine_orp') | float(default=0) %} {% set\
            \ y=state_attr(\"sensor.orp_stat\", \"mean\") | float(default=0) %} {% set\
            \ x=states('input_number.simul_orp') | float(default=0) %} {% set c=states('input_number.orp_cible')\
            \ | float(default=0) %} {% set d=states('input_number.chlore_debit_ppe') |\
            \ float(default=0) %} {% set e=states('input_number.chlore_concentration')\
            \ | float(default=0) %} {% set r=(((c-m)/(e/100))/d)*3600|round(2)|int(default=0)\
            \ %}  {% if r < 0 %}\n  {{ 0 }}\n{% else %}\n  {{ (r//60)|int(default=0) }}\n\
            {% endif %}"
      - service: switch.turn_on
        target:
          entity_id:
          - switch.ppe_chlore
        data: {}
      - service: notify.telegram
        data:
          message: ORP sonde= {{states('sensor.orp_piscine_orp')}} {{-"\n"-}}{{states("sensor.date_time")
            }}
          title: "Piscine Début injection Chlore !!!"
      - delay: 00:{{ states('input_number.chlore_duree_inject_mn')|int}}:{{ states('input_number.chlore_duree_inject_s')
          | int }}
      - service: input_number.set_value
        data_template:
          entity_id: input_number.chlore_vol_injecte
          value: '{% set a=states(''input_number.chlore_vol_injecte'')|float %} {% set
            b=states(''input_number.chlore_debit_ppe'')|float %} {% set c=states(''input_number.chlore_duree_inject_s'')|float
            %} {% set d=states(''input_number.chlore_duree_inject_mn'')|float %} {{a+(
            (b*((d*60)+c)/3600))|round(2) }}'
      - service: switch.turn_off
        target:
          entity_id: switch.ppe_chlore
        data: {}
      - service: notify.telegram
        data:
          message: ORP sonde= {{states('sensor.orp_piscine_orp')}}{{-"\n"-}} Vol Injecté
            =  {% set b=states('input_number.chlore_debit_ppe')|float %} {% set c=states('input_number.chlore_duree_inject_s')|float
            %} {% set d=states('input_number.chlore_duree_inject_mn')|float %} {{(b*((d*60)+c)/3600)|round(2)
            }} l {{-"\n"-}}{{states("sensor.date_time") }}
          title: "Piscine Fin injection Chlore !!!"
    mode: single
  #
  - alias: Piscine-3_3_3-ORP Notifications
    description: Notifie ORP bas, haut, anormal, bidon bas
    trigger:
    - platform: numeric_state
      entity_id: sensor.orp_piscine_orp
      below: '600'
      above: '0'
      id: orp_bas
    - platform: numeric_state
      entity_id: sensor.orp_piscine_orp
      id: orp_haut
      above: '900'
    - platform: numeric_state
      entity_id: sensor.orp_stat_standard_deviation
      id: orp_mauvais
      above: '0.1'
    - platform: state
      entity_id: binary_sensor.orp_niveau_bas_bidon
      id: niv_bas_bidon
      to: 'on'
    condition: []
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: orp_bas
        sequence:
        - service: notify.telegram
          data:
            message: ORP Bas = {{states('sensor.orp_piscine_orp') }}{{-"\n"-}}{{states("sensor.date_time")
              }}
            title: Piscine Alerte ORP !!!
      - conditions:
        - condition: trigger
          id: orp_haut
        sequence:
        - service: notify.telegram
          data:
            message: ORP Haut = {{states('sensor.orp_piscine_orp') }}{{-"\n"-}}{{states("sensor.date_time")
              }}
            title: Piscine Alerte ORP !!!
      - conditions:
        - condition: trigger
          id: orp_mauvais
        sequence:
        - service: notify.telegram
          data:
            message: ORP Mauvais sonde à calibrer??{{-"\n"-}} Median = {{states("sensor.orp_stat_median")}}{{-"\n"-}}
              Deviation(S=0.01) = {{states("sensor.orp_stat_standard_deviation")}} {{-"\n"-}}{{states("sensor.date_time")
              }}
            title: Piscine Alerte ORP !!!
      - conditions:
        - condition: trigger
          id: niv_bas_bidon
        sequence:
        - service: notify.telegram
          data:
            message: Volume Restant = {{(states("sensor.orp_volume_restant_bidon"))|round(2)
              }} l{{-"\n"-}}{{states("sensor.date_time") }}
            title: Piscine Alerte niveau Bas Bidon ORP !!!
      default: []
    mode: single

  - alias: "Piscine-3_3_4-ORP-Memorisation"
    description: "ORP Mémorisation avant arret"
    trigger:
      - platform: time_pattern
        minutes: /1
    condition:
      - condition: state
        entity_id: binary_sensor.ppe_piscine_en_marche
        state: 'on'
        for:
          hours: 0
          minutes: 30
          seconds: 0
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.orp_memoire
        data_template:
          value: '{{ states("sensor.f_orp_ezo") | float |round(2) }}'
    mode: single
#
  - alias: "Piscine-3_3_5-Cartouche Chlore"
    description: "Mémorisation du temps d'utilisation cartouche chlore hedbo- RAZ à la main"
    trigger:
    - platform: time
      at: '23:50'
    condition: []
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.temps_cartouche_chlore
        value: '{% set a=states(''input_number.temps_cartouche_chlore'')|float %} {%
          set b=states(''sensor.ma_ppe_piscine_jour'')|float %} {{ (a + b)|round(2)
          }}'
    mode: single

  - alias: "Piscine-3_3_6-Temps utilisation cartouche chlore atteint"
    description: 'Alerte Temps utilisation cartouche chlore atteint'
    trigger:
    - platform: template
      value_template: '{% set a=states(''input_number.temps_cartouche_chlore'') | float
        %}
        {% set b=states(''input_number.chlore_seuil_max_utilisation'') | float %}
        {{ a > b }}'
    condition: []
    action:
    - service: notify.telegram
      data:
        message: 'Tps Utilisation cart. Chlore = {{states(''input_number.temps_cartouche_chlore'')}}
          h {{-"\n"-}} Temps maxi:  {{states(''input_number.chlore_seuil_max_utilisation'')}}
          h {{-"\n"-}}{{states("sensor.date_time") }}'
        title: Piscine Alerte Cartouche Chlore à changer!!!
    mode: single